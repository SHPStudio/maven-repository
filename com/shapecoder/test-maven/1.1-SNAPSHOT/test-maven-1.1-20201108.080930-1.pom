<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.shapecoder</groupId>
  <artifactId>test-maven</artifactId>
  <version>1.1-SNAPSHOT</version>

  <name>test-maven</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <!-- 此处配置的名称要和maven配置文件对应的serverId一致 -->
    <github.global.server>github</github.global.server>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- 此tag下面的所有plugins都是关于上传jar包的依赖 -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <!-- 配置本地打包后的本地仓库存储地址，后续上传jar包会从此仓库中去取 -->
          <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/maven-repository</altDeploymentRepository>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.12</version>
        <configuration>
          <message>Maven artifacts for ${project.artifactId}-${project.version}</message>
          <noJekyll>true</noJekyll>
          <!-- 指定从哪里去取打好的包，并上传至github -->
          <outputDirectory>${project.build.directory}/maven-repository</outputDirectory>
          <!--
              指定要上传的分支, refs/heads 这个不变，后面的分支名可选，可以采取一个jar包使用一个分支的策略。
              若多个jar包同时发布在同一个分支的话，会覆盖。。。。
          -->
          <branch>refs/heads/main</branch>
          <!-- 包含outputDirectory标签内填的文件夹中的所有内容 -->
          <includes>
            <include>**/*</include>
          </includes>
          <!-- github远程存储outputDirectory标签内填的文件夹中的内容 -->
          <repositoryName>maven-repository</repositoryName>
          <!--
            github的用户名，注意不是登录的用户名，此项需要登录后，进入https://github.com/settings/profile页面配置Name属性，
            否则会报
            [ERROR] Failed to execute goal com.github.github:site-maven-plugin:0.12:site
            (default) on project rfcore: Error creating commit: Invalid request.
            [ERROR] For 'properties/name', nil is not a string.
            [ERROR] For 'properties/name', nil is not a string. (422)
            [ERROR] -> [Help 1]
            的错误
          -->
          <repositoryOwner>SHPStudio</repositoryOwner>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
